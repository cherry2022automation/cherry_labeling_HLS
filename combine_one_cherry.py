import cv2
import os
import cherry

# 変更を行う変数 ========================================================================

# 結合元ディレクトリ
open_dir = "C:\\Users\\cherr\\Desktop\\data\\cherry_photo\\resize_025_trim_640_label\\"

# 出力先ディレクトリ
output_dir = "C:\\Users\\cherr\\Desktop\\data\\cherry_photo\\resize_025_trim_640_label_combine\\"

# 拡大率
magnification = 0.25

# =====================================================================================

failed_num = []

# ディレクトリ内に存在する画像のシリアル番号をリスト化
def get_serial_nums(files):
    serial_nums = []
    for file in files:
        try:
            file_names = file.split("_", 1)
            num = int(file_names[0])
            if num in serial_nums:
                continue
            serial_nums.append(num)
        except:
            pass
    return serial_nums


def combine_one_cherry(open_serial_num=None):

    print("========== combine start ==========")

    # ディレクトリ内のファイル名を取得
    open_files = os.listdir(open_dir)
    already_files = os.listdir(output_dir)

    # ディレクトリ内の画像のシリアル番号リストを取得
    if open_serial_num is None:
        open_serial_num = get_serial_nums(open_files)
    already_serial_num = get_serial_nums(already_files)

    # 出力先に存在しない画像のみリサイズして保存
    for num in open_serial_num:

        if num in already_serial_num:
            continue

        try:

            cherry_01 = cherry.cherry(num, picture_dir=open_dir)
            cherry_01.open_picture()

            one_cherry = cv2.hconcat([cherry_01.picture_B.original, cherry_01.picture_L.original, cherry_01.picture_R.original, cherry_01.picture_T.original])
            
            cv2.imwrite(output_dir + cherry_01.file_name + ".jpeg", one_cherry)
            
            print(str(num) + "done")
        
        except:
            failed_num.append(num)
            print(str(num) + "faild")

    print("\rcombine completed")
    print("")
    print("failed number")
    print(failed_num)
    print("")

    return failed_num
        
if __name__ == "__main__":
    target_num = [1,46,47,48,49,50,51,239,240,241,242,243,244,245,246,247,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,647,648,649,650,651,652,653,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,813,814,815,816,817,819,820,821,822,823,824,825,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1368,1369,1371,1372,1373,1374,1375,1376,1377,1378,1379,1381,1382,1383,1384,1385,1386,1387,1388,1389,1390,1392,1393,1394,1395,1396,1397,1398,1399,1400,1401,1402,1403,1404,1405,1406,1407,1408,1409,1410,1411,1412,1413,1414,1415,1416,1417,1418,1419,1420,1421,1422,1423,1424,1425,1426,1427,1428,1429,1430,1431,1432,1433,1435,1436,1437,1438,1439,1440,1441,1443,1444]
    combine_one_cherry(target_num)